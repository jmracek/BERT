// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: BatchInferenceRequest.capnp

#include "BatchInferenceRequest.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<89> b_869037e1249d10bf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191,  16, 157,  36, 225,  55, 144, 134,
     28,   0,   0,   0,   1,   0,   1,   0,
    221,  90, 231, 114,  98, 166,   2, 178,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     66,  97, 116,  99, 104,  73, 110, 102,
    101, 114, 101, 110,  99, 101,  82, 101,
    113, 117, 101, 115, 116,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,  73, 110, 102, 101, 114, 101, 110,
     99, 101,  82, 101, 113, 117, 101, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     12, 207,  23, 166, 244, 191,  51, 159,
      1,   0,   0,   0,  50,   0,   0,   0,
     73, 110, 112, 117, 116,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
     97, 112, 105,  75, 101, 121,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108,  73, 100,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97, 116,  99, 104,  83, 105, 122,
    101,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 112, 117, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     12, 207,  23, 166, 244, 191,  51, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_869037e1249d10bf = b_869037e1249d10bf.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_869037e1249d10bf[] = {
  &s_9f33bff4a617cf0c,
};
static const uint16_t m_869037e1249d10bf[] = {0, 2, 3, 1};
static const uint16_t i_869037e1249d10bf[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_869037e1249d10bf = {
  0x869037e1249d10bf, b_869037e1249d10bf.words, 89, d_869037e1249d10bf, m_869037e1249d10bf,
  1, 4, i_869037e1249d10bf, nullptr, nullptr, { &s_869037e1249d10bf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_9f33bff4a617cf0c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 207,  23, 166, 244, 191,  51, 159,
     50,   0,   0,   0,   1,   0,   1,   0,
    191,  16, 157,  36, 225,  55, 144, 134,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     66,  97, 116,  99, 104,  73, 110, 102,
    101, 114, 101, 110,  99, 101,  82, 101,
    113, 117, 101, 115, 116,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,  73, 110, 102, 101, 114, 101, 110,
     99, 101,  82, 101, 113, 117, 101, 115,
    116,  46,  73, 110, 112, 117, 116,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    107, 216,  49, 209, 150,  35, 126, 149,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    107, 216,  49, 209, 150,  35, 126, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f33bff4a617cf0c = b_9f33bff4a617cf0c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9f33bff4a617cf0c[] = {
  &s_957e2396d131d86b,
};
static const uint16_t m_9f33bff4a617cf0c[] = {0, 1, 2};
static const uint16_t i_9f33bff4a617cf0c[] = {0, 1, 2};
const ::capnp::_::RawSchema s_9f33bff4a617cf0c = {
  0x9f33bff4a617cf0c, b_9f33bff4a617cf0c.words, 69, d_9f33bff4a617cf0c, m_9f33bff4a617cf0c,
  1, 3, i_9f33bff4a617cf0c, nullptr, nullptr, { &s_9f33bff4a617cf0c, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<74> b_957e2396d131d86b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    107, 216,  49, 209, 150,  35, 126, 149,
     56,   0,   0,   0,   2,   0,   0,   0,
     12, 207,  23, 166, 244, 191,  51, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  63,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     66,  97, 116,  99, 104,  73, 110, 102,
    101, 114, 101, 110,  99, 101,  82, 101,
    113, 117, 101, 115, 116,  46,  99,  97,
    112, 110, 112,  58,  66,  97, 116,  99,
    104,  73, 110, 102, 101, 114, 101, 110,
     99, 101,  82, 101, 113, 117, 101, 115,
    116,  46,  73, 110, 112, 117, 116,  46,
     84, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     52,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108,   0,   0,   0,   0,
    105, 110, 116,  56,   0,   0,   0,   0,
    105, 110, 116,  49,  54,   0,   0,   0,
    105, 110, 116,  51,  50,   0,   0,   0,
    105, 110, 116,  54,  52,   0,   0,   0,
    117, 105, 110, 116,  56,   0,   0,   0,
    117, 105, 110, 116,  49,  54,   0,   0,
    117, 105, 110, 116,  51,  50,   0,   0,
    117, 105, 110, 116,  54,  52,   0,   0,
    102, 112,  51,  50,   0,   0,   0,   0,
    102, 112,  54,  52,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,   0,   0,
     98, 105, 110,  97, 114, 121,   0,   0, }
};
::capnp::word const* const bp_957e2396d131d86b = b_957e2396d131d86b.words;
#if !CAPNP_LITE
static const uint16_t m_957e2396d131d86b[] = {12, 0, 9, 10, 2, 3, 4, 1, 11, 6, 7, 8, 5};
const ::capnp::_::RawSchema s_957e2396d131d86b = {
  0x957e2396d131d86b, b_957e2396d131d86b.words, 74, nullptr, m_957e2396d131d86b,
  0, 13, nullptr, nullptr, nullptr, { &s_957e2396d131d86b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_957e2396d131d86b, 957e2396d131d86b);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// BatchInferenceRequest
constexpr uint16_t BatchInferenceRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t BatchInferenceRequest::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BatchInferenceRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BatchInferenceRequest::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BatchInferenceRequest::Input
constexpr uint16_t BatchInferenceRequest::Input::_capnpPrivate::dataWordSize;
constexpr uint16_t BatchInferenceRequest::Input::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BatchInferenceRequest::Input::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BatchInferenceRequest::Input::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



